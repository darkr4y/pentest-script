#!/usr/bin/env python
import sys
import time
import urllib2
#import urllib 
#import re
from sgmllib import SGMLParser



class ListURL(SGMLParser):
    def reset(self):
        self.URLlist = []
        self.flag = False
        self.getdata = False
        self.verbatim = 0
        self.URLs = []
        SGMLParser.reset(self)
        
    def start_table(self, attrs):
	self.flag = True
	#print self.flag
        if self.flag == True:
            self.verbatim +=1
            return


    def end_table(self):
        if self.verbatim == 0:
            self.flag = False
        if self.flag == True:
            self.verbatim -=1

    def start_a(self, attrs):
        if self.flag == False:
            return
        #self.getdata = True
        for k,v in attrs:
			if k == 'target' and v == '_blank':
				self.getdata = True
				href = [v for k, v in attrs if k == "href" and v.find('index.php?type=')<0 ]
				self.URLs.extend(href)

			
   
        
    def end_a(self):
        if self.getdata:
            self.getdata = False

    def handle_data(self, text):
        if self.getdata:
            self.URLlist.append(text)
            
    def printTitle(self):
		for i in self.URLlist:
			print i
		for j in self.URLs:
			print j
            
    def printURL(self):
		for i in self.URLs:
		    print i




if len(sys.argv) < 2:
  print '\nUsage:'
  print '\t%s --dump' % sys.argv[0]
  print '\t%s --about' % sys.argv[0]
  sys.exit(1)

def banner():
  print '''
dump secwiki urls...
by DarkR4y.
BLog: www.blackh4t.org
'''

option   = sys.argv[1]


if option == '--dump':

    try:
      #banner()
      
      def secwiki():
        site = 'http://wiki.ourren.com/'
        for p in range(1,47):
			rest = 'index.php?p=%s' % p
			req  = urllib2.Request(site+rest)
			try:
				fd   = urllib2.urlopen(req)
				data = fd.read()
				#print data
				t = ListURL()
				t.feed(data)
				t.printTitle()
				t.printURL()
			
			except urllib2.URLError:  print '[+] site: %s \t\t\t[+] Error: seems to be down' % site
        
      secwiki()

      
    except KeyboardInterrupt: print '\nTerminated by user ...'
    
elif option == '--about':
  banner()
  
else: banner() 
