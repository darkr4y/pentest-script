import sys
import socket
import urllib2
import re

SITE_LIST = []
SEARCHURL = "http://www.bing.com/search?q=ip:"

enable_proxy = False
proxy_handler = urllib2.ProxyHandler({"http" : 'http://127.0.0.1:8080'})
null_proxy_handler = urllib2.ProxyHandler({})
 
if enable_proxy:
    opener = urllib2.build_opener(proxy_handler)
else:
    opener = urllib2.build_opener(null_proxy_handler)
 
urllib2.install_opener(opener)
#----------------------------------------------------------------
def usage():
    print "Bing Batch Search Tools"
    print "Usage: bing.py www.blackh4t.org"
    print "Usage: bing.py -s 8.8.8.8"

def main():
    global SITE_LIST
    global SEARCHURL
    if len(sys.argv) == 2:
        host = sys.argv[1]
        ip = socket.gethostbyname(host)
        print ip
        request = urllib2.Request(SEARCHURL + ip)
        request.add_header('User-Agent', 'Mozilla/5.0 (Windows NT 5.2; rv:28.0) Gecko/20100101 Firefox/28.0')
        request.add_header('Accept-Language', 'en-US,en;q=0.5')
        r = urllib2.urlopen(request).read()
        count = re.findall('<span class="sb_count">(.*?)<\/span>',r)
        print "total: " + count[0]
        site = re.findall('<cite>(.*?)<\/cite>',r)
        print site
        r.close()
        #eg: page 5 - first=41
        print "because of BING's restrick,only 10 pages result can crawled."
        for i in xrange(11,31,10):
            print SEARCHURL + ip + "&first=" + str(i)
            request = urllib2.Request(SEARCHURL + ip + "&first=" + i)
            request.add_header('User-Agent', 'Mozilla/5.0 (Windows NT 5.2; rv:28.0) Gecko/20100101 Firefox/28.0')
            request.add_header('Accept-Language', 'en-US,en;q=0.5')
            r = urllib2.urlopen(request).read()
            sites = re.findall('<cite>(.*?)<\/cite>',r)
            print sites
            r.close()
        
        
    elif len(sys.argv) == 3:
        if sys.argv[1] == '-s':
            pass
        print "-------------------------------------------------------"
    else:
        usage()
    pass



if __name__ == "__main__":
    main()
